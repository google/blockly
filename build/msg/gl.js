// This file was automatically generated.  Do not modify.

'use strict';

var Blockly = Blockly || { Msg: Object.create(null) };

Blockly.Msg["ADD_COMMENT"] = "Engadir un comentario";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Non se pode eliminar a variable \"%1\" porque forma parte da definición da función '%2'";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Cambiar o valor:";
Blockly.Msg["CLEAN_UP"] = "Limpar os bloques";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Os bloques contraídos conteñen avisos.";
Blockly.Msg["COLLAPSE_ALL"] = "Contraer os bloques";
Blockly.Msg["COLLAPSE_BLOCK"] = "Contraer o bloque";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "cor 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "cor 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "proporción";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "mesturar";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Mestura dúas cores coa proporción indicada (0,0 - 1,0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://gl.wikipedia.org/wiki/Cor";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Escolle unha cor da paleta.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "cor ao chou";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Escolle unha cor ao chou.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "azul";
Blockly.Msg["COLOUR_RGB_GREEN"] = "verde";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "vermello";
Blockly.Msg["COLOUR_RGB_TITLE"] = "colorar con";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Crea unha cor coa cantidade especificada de vermello, verde e azul. Todos os valores deben estar entre 0 e 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "saír do bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "continuar coa seguinte iteración do bucle";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Saír do bucle interior.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Saltar o resto do bucle e continuar coa seguinte iteración.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Aviso: Este bloque só se pode usar dentro dun bucle.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "para cada elemento %1 da lista %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Para cada elemento dunha lista, establece o elemento na variable \"%1\" e logo executa algunhas instrucións.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "contar con %1 desde %2 ata %3 en incrementos de %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Fai que a variable \"%1\" tome os valores desde o número inicial ata o número final dentro do intervalo especificado e executa os bloques especificados.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Engade unha condición ao bloque \"se\".";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Engade unha condición final e predeterminada ao bloque \"se\".";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Engade, elimina ou reordena as seccións para reconfigurar este bloque \"se\".";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "se non";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "mais se";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "se";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Se un valor é verdadeiro, executa algunhas instrucións.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Se un valor é verdadeiro, executa o primeiro bloque de instrucións. En caso contrario, executa o segundo bloque de instrucións.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Se o primeiro valor é verdadeiro, executa o primeiro bloque de instrucións. En caso contrario, se o segundo valor é verdadeiro, executa o segundo bloque de instrucións.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Se o primeiro valor é verdadeiro, executa o primeiro bloque de instrucións. En caso contrario, se o segundo valor é verdadeiro, executa o segundo bloque de instrucións. Se ningún valor é verdadeiro, executa o último bloque de instrucións.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";  // untranslated
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "executar";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "repetir %1 veces";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Executa algunhas instrucións varias veces.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "repetir ata";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "repetir mentres";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Namentres un valor é falso, executa algunhas instrucións.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Namentres un valor é verdadeiro, executa algunhas instrucións.";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Queres eliminar os %1 bloques?";
Blockly.Msg["DELETE_BLOCK"] = "Borrar o bloque";
Blockly.Msg["DELETE_VARIABLE"] = "Eliminar a variable \"%1\"";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Queres eliminar %1 usos da variable '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Borrar %1 bloques";
Blockly.Msg["DIALOG_CANCEL"] = "Cancelar";
Blockly.Msg["DIALOG_OK"] = "Aceptar";
Blockly.Msg["DISABLE_BLOCK"] = "Desactivar o bloque";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplicar";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicar o comentario";
Blockly.Msg["ENABLE_BLOCK"] = "Activar o bloque";
Blockly.Msg["EXPAND_ALL"] = "Expandir os bloques";
Blockly.Msg["EXPAND_BLOCK"] = "Expandir o bloque";
Blockly.Msg["EXTERNAL_INPUTS"] = "Entradas externas";
Blockly.Msg["HELP"] = "Axuda";
Blockly.Msg["INLINE_INPUTS"] = "Entradas en liña";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "crear unha lista baleira";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Devolve unha lista, de lonxitude 0, que non contén rexistros de datos";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "lista";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Engade, elimina ou reordena as seccións para reconfigurar este bloque de lista.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "crear lista con";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Engade un elemento á lista.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Crea unha lista con calquera número de elementos.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "primeiro";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# dende o final";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "obter";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "obter e eliminar";
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "derradeiro";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "ao chou";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "eliminar";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Devolve o primeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Devolve o elemento na posición especificada dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Devolve o derradeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Devolve un elemento aleatorio dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Elimina e devolve o primeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Elimina e devolve o elemento na posición especificada dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Elimina e devolve o derradeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Elimina e devolve un elemento aleatorio dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Elimina o primeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Elimina e devolve o elemento na posición especificada dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Elimina o derradeiro elemento dunha lista.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Elimina un elemento aleatorio dunha lista.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "ata # desde o final";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "ata #";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "ata o final";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "obter a sublista desde o primeiro";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "obter a sublista desde # desde o final";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "obter a sublista desde #";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Crea unha copia da parte especificada dunha lista.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 é o derradeiro elemento.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 é o primeiro elemento.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "atopar a primeira aparición do elemento";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#finding-items-in-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "atopar a derradeira aparición do elemento";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Devolve o índice da primeira/derradeira aparición do primeiro elemento na lista. Devolve %1 se non se atopa o elemento.";
Blockly.Msg["LISTS_INLIST"] = "na lista";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 está baleira";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Devolve verdadeiro se a lista está baleira.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "lonxitude de %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Devolve a lonxitude dunha lista.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "crear unha lista co elemento %1 repetido %2 veces";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Crea unha lista composta polo valor indicado repetido o número especificado de veces.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "inverter %1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Inverter unha copia dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "como";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "inserir en";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "definir";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Insire o elemento ao comezo dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Insire o elemento na posición especificada dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Engade o elemento ao final dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Insire o elemento de forma aleatoria nunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Define o primeiro elemento dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Define o elemento na posición especificada dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Define o derradeiro elemento dunha lista.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Define un elemento aleatorio nunha lista.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";  // untranslated
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "ascendente";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "descendente";
Blockly.Msg["LISTS_SORT_TITLE"] = "ordenar %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Ordenar unha copia dunha lista.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabética, ignorar as maiúsculas e minúsculas";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "numérica";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alfabética";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "elaborar unha lista a partir do texto";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "elaborar un texto a partir da lista";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Une unha lista de textos nun texto, separados por un delimitador.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Divide o texto nunha lista de textos, rompéndoo en cada delimitador.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "con delimitador";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "falso";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Devolve verdadeiro ou falso.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "verdadeiro";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";  // untranslated
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Devolve verdadeiro se as dúas entradas son iguais entre si.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Devolve verdadeiro se a primeira entrada é maior que a segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Devolve verdadeiro se a primeira entrada é maior ou igual que a segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Devolve verdadeiro se a primeira entrada é menor que a segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Devolve verdadeiro se a primeira entrada é menor ou igual que a segunda entrada.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Devolve verdadeiro se as dúas entradas non son iguais entre si.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "non %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Devolve verdadeiro se a entrada é falsa. Devolve falso se a entrada é verdadeira.";
Blockly.Msg["LOGIC_NULL"] = "nulo";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Devolve nulo.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "e";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "ou";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Devolve verdadeiro se as dúas entradas son verdadeiras.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Devolve verdadeiro se polo menos unha das entradas é verdadeira.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "condición";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "se é falso";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "se é verdadeiro";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Comproba a condición que hai en \"condición\". Se a condición é verdadeira, devolve o valor de \"se é verdadeiro\"; en caso contrario, devolve o valor de \"se é falso\".";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://gl.wikipedia.org/wiki/Aritmética";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Devolve a suma de dous números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Devolve o cociente da división de dous números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Devolve a diferenza de dous números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Devolve o produto de dous números.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Devolve o primeiro número elevado á potencia do segundo número.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 de X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Devolve o arcotanxente do punto (X, Y) en graos de -180 a 180.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";  // untranslated
Blockly.Msg["MATH_CHANGE_TITLE"] = "mudar %1 por %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Suma un número á variable \"%1\".";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://gl.wikipedia.org/wiki/Constante_matemática";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Devolve unha das constantes comúns: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) ou ∞ (infinito).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "limitar %1 entre %2 e %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Restrinxir un número para que estea entre os límites especificados (incluídos).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "é divisíbel por";
Blockly.Msg["MATH_IS_EVEN"] = "é par";
Blockly.Msg["MATH_IS_NEGATIVE"] = "é negativo";
Blockly.Msg["MATH_IS_ODD"] = "é impar";
Blockly.Msg["MATH_IS_POSITIVE"] = "é positivo";
Blockly.Msg["MATH_IS_PRIME"] = "é primo";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Verifica se un número é par, impar, primo, enteiro, positivo, negativo ou se é divisíbel por outro número. Devolve verdadeiro ou falso.";
Blockly.Msg["MATH_IS_WHOLE"] = "é enteiro";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";  // untranslated
Blockly.Msg["MATH_MODULO_TITLE"] = "resto de %1 / %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Devolve o resto de dividir os dous números.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://gl.wikipedia.org/wiki/Número";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Un número.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "media da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "maior da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "mediana da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "menor da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "moda da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "elemento aleatorio da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "desviación típica da lista";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "suma da lista";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Devolve a media aritmética dos valores numéricos da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Devolve o número máis grande da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Devolve a mediana da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Devolve o número máis pequeno da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Devolve a lista do(s) elemento(s) máis comúns na lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Devolve un elemento aleatorio da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Devolve a desviación típica da lista.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Devolve a suma de tódolos números da lista.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "fracción aleatoria";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Devolve unha fracción aleatoria entre 0,0 (incluído) e 1,0 (excluído).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";  // untranslated
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "enteiro aleatorio entre %1 e %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Devolve un número enteiro aleatorio entre os dous límites especificados (incluídos).";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://gl.wikipedia.org/wiki/Arredondamento";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "arredondar";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "arredondar cara a abaixo";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "arredondar cara a arriba";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Arredonda un número cara a arriba ou cara a abaixo.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://gl.wikipedia.org/wiki/Raíz_cadrada";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "absoluto";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "raíz cadrada";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Devolve o valor absoluto dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Devolve o número e elevado á potencia dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Devolve o logaritmo natural dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Devolve o logaritmo en base 10 dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Devolve o oposto dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Devolve 10 elevado á potencia dun número.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Devolve a raíz cadrada dun número.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";
Blockly.Msg["MATH_TRIG_ASIN"] = "asen";
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";
Blockly.Msg["MATH_TRIG_COS"] = "cos";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://gl.wikipedia.org/wiki/Función_trigonométrica";
Blockly.Msg["MATH_TRIG_SIN"] = "sen";
Blockly.Msg["MATH_TRIG_TAN"] = "tan";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Devolve o arcocoseno dun número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Devolve o arcoseno dun número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Devolve o arcotanxente dun número.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Devolve o coseno dun grao (non radián).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Devolve o seno dun grao (non radián).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Devolve a tanxente dun grao (non radián).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Crear unha variable de cor...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Crear unha variable numérica...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Crear unha variable de cadea...";
Blockly.Msg["NEW_VARIABLE"] = "Crear a variable...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nome da nova variable:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Tipo da nova variable:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "permitir instrucións";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Executa a función definida polo usuario \"%1\".";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Executa a función definida polo usuario \"%1\" e usa a súa devolución.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "con:";
Blockly.Msg["PROCEDURES_CALL_DISABLED_DEF_WARNING"] = "Non se pode executar a función \"%1\" definida polo usuario porque o bloque de definición está desactivado.";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Crear \"%1\"";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Describe esta función...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "facer algo";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "para";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Crea unha función sen devolución.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Subroutine";  // untranslated
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "devolver";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Crea unha función con devolución.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Aviso: Esta función ten parámetros duplicados.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Destacar a definición da función";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "https://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Se un valor é verdadeiro, devolve un segundo valor.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Aviso: Este bloque só se pode usar dentro da definición dunha función.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "nome da entrada:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Engade unha entrada á función.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "entradas";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Engade, elimina ou reordena as entradas desta función.";
Blockly.Msg["REDO"] = "Refacer";
Blockly.Msg["REMOVE_COMMENT"] = "Eliminar o comentario";
Blockly.Msg["RENAME_VARIABLE"] = "Renomear a variable...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Renomear todas as variables \"%1\" a:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "a %1 anexar o texto %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Engade algo de texto á variable \"%1\".";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "en minúsculas";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "en Maiúsculas Iniciais";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "en MAIÚSCULAS";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Devolve unha copia do texto nun caso diferente.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "obter a primeira letra";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "obter a letra # desde o final";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "obter a letra #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "obter a derradeira letra";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "obter unha letra aleatoria";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "no texto %1 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Devolve a letra que está na posición especificada.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "contar %1 en %2";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Conta cantas veces aparece un texto dentro doutro texto.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Engade un elemento ao texto.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "unir";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Engade, elimina ou reordena as seccións para reconfigurar este bloque de texto.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "ata a letra # desde o final";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "ata a letra #";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "ata a derradeira letra";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "no texto";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "obter a subcadea desde a primeira letra";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "obter a subcadea desde a letra # desde o final";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "obter a subcadea desde a letra #";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Devolve unha parte especificada do texto.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "atopar a primeira aparición do texto";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "atopar a derradeira aparición do texto";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "no texto %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Devolve o índice da primeira/derradeira aparición do primeiro texto no segundo texto. Devolve %1 se non se atopa o texto.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 está baleiro";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Devolve verdadeiro se o texto proporcionado está baleiro.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "crear texto con";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Crea un fragmento de texto unindo calquera número de elementos.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "lonxitude de %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Devolve o número de letras (incluídos os espazos) do texto proporcionado.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "imprimir %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Imprime o texto, o número ou outro valor especificado.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Solicitar un número ao usuario.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Solicitar un texto ao usuario.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "solicitar un número coa mensaxe";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "solicitar un texto coa mensaxe";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "substituír %1 por %2 en %3";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Substitúe todas as aparicións dun texto dentro doutro texto.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "inverter %1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Inverte a orde dos caracteres do texto.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";  // untranslated
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Unha letra, palabra ou liña de texto.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "eliminar os espazos de ambos os lados";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "eliminar os espazos do lado esquerdo de";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "eliminar os espazos do lado dereito de";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Devolve unha copia do texto cos espazos eliminados dun extremo ou de ambos.";
Blockly.Msg["TODAY"] = "Hoxe";
Blockly.Msg["UNDO"] = "Desfacer";
Blockly.Msg["UNNAMED_KEY"] = "innominada";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "elemento";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Crear \"definir %1\"";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Devolve o valor desta variable.";
Blockly.Msg["VARIABLES_SET"] = "definir %1 como %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Crear \"obter %1\"";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Establece esta variable para que sexa igual á entrada.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Xa existe unha variable co nome \"%1\".";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "Xa existe unha variable co nome \"%1\" para outro tipo: '%2'.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_A_PARAMETER"] = "Xa existe unha variable co nome \"%1\" como parámetro no procedemento '%2'.";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Espazo de traballo do Blockly";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Di algo...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
Blockly.Msg["VARIABLES_HUE"] = "330";